{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  products: [{\n    id: 1,\n    name: 'Laptop',\n    category: 'Electronics',\n    price: 999.99,\n    stock: 15,\n    expiry: '2025-12-31'\n  }, {\n    id: 2,\n    name: 'Coffee Beans',\n    category: 'Food',\n    price: 24.99,\n    stock: 3,\n    expiry: '2024-06-15'\n  }, {\n    id: 3,\n    name: 'Office Chair',\n    category: 'Furniture',\n    price: 199.99,\n    stock: 8,\n    expiry: '2026-01-01'\n  }],\n  nextId: 4\n};\nconst productSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    addProduct: (state, action) => {\n      const product = {\n        ...action.payload,\n        id: state.nextId,\n        price: parseFloat(action.payload.price),\n        stock: parseInt(action.payload.stock)\n      };\n      state.products.push(product);\n      state.nextId += 1;\n    },\n    updateProduct: (state, action) => {\n      const index = state.products.findIndex(p => p.id === action.payload.id);\n      if (index !== -1) {\n        state.products[index] = {\n          ...action.payload,\n          price: parseFloat(action.payload.price),\n          stock: parseInt(action.payload.stock)\n        };\n      }\n    },\n    deleteProduct: (state, action) => {\n      state.products = state.products.filter(p => p.id !== action.payload);\n    }\n  }\n});\nexport const {\n  addProduct,\n  updateProduct,\n  deleteProduct\n} = productSlice.actions;\nexport const selectProducts = state => state.products.products;\nexport const selectProductById = (state, id) => state.products.products.find(p => p.id === parseInt(id));\nexport default productSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","products","id","name","category","price","stock","expiry","nextId","productSlice","reducers","addProduct","state","action","product","payload","parseFloat","parseInt","push","updateProduct","index","findIndex","p","deleteProduct","filter","actions","selectProducts","selectProductById","find","reducer"],"sources":["D:/WORK/Inventory Management System/src/redux/productSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  products: [\r\n    {\r\n      id: 1,\r\n      name: 'Laptop',\r\n      category: 'Electronics',\r\n      price: 999.99,\r\n      stock: 15,\r\n      expiry: '2025-12-31'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Coffee Beans',\r\n      category: 'Food',\r\n      price: 24.99,\r\n      stock: 3,\r\n      expiry: '2024-06-15'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Office Chair',\r\n      category: 'Furniture',\r\n      price: 199.99,\r\n      stock: 8,\r\n      expiry: '2026-01-01'\r\n    }\r\n  ],\r\n  nextId: 4\r\n};\r\n\r\nconst productSlice = createSlice({\r\n  name: 'products',\r\n  initialState,\r\n  reducers: {\r\n    addProduct: (state, action) => {\r\n      const product = {\r\n        ...action.payload,\r\n        id: state.nextId,\r\n        price: parseFloat(action.payload.price),\r\n        stock: parseInt(action.payload.stock)\r\n      };\r\n      state.products.push(product);\r\n      state.nextId += 1;\r\n    },\r\n    updateProduct: (state, action) => {\r\n      const index = state.products.findIndex(p => p.id === action.payload.id);\r\n      if (index !== -1) {\r\n        state.products[index] = {\r\n          ...action.payload,\r\n          price: parseFloat(action.payload.price),\r\n          stock: parseInt(action.payload.stock)\r\n        };\r\n      }\r\n    },\r\n    deleteProduct: (state, action) => {\r\n      state.products = state.products.filter(p => p.id !== action.payload);\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addProduct, updateProduct, deleteProduct } = productSlice.actions;\r\n\r\nexport const selectProducts = (state) => state.products.products;\r\nexport const selectProductById = (state, id) => \r\n  state.products.products.find(p => p.id === parseInt(id));\r\n\r\nexport default productSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,CACR;IACEC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,aAAa;IACvBC,KAAK,EAAE,MAAM;IACbC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV,CAAC,EACD;IACEL,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,cAAc;IACpBC,QAAQ,EAAE,MAAM;IAChBC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV,CAAC,EACD;IACEL,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,cAAc;IACpBC,QAAQ,EAAE,WAAW;IACrBC,KAAK,EAAE,MAAM;IACbC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV,CAAC,CACF;EACDC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,YAAY,GAAGV,WAAW,CAAC;EAC/BI,IAAI,EAAE,UAAU;EAChBH,YAAY;EACZU,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMC,OAAO,GAAG;QACd,GAAGD,MAAM,CAACE,OAAO;QACjBb,EAAE,EAAEU,KAAK,CAACJ,MAAM;QAChBH,KAAK,EAAEW,UAAU,CAACH,MAAM,CAACE,OAAO,CAACV,KAAK,CAAC;QACvCC,KAAK,EAAEW,QAAQ,CAACJ,MAAM,CAACE,OAAO,CAACT,KAAK;MACtC,CAAC;MACDM,KAAK,CAACX,QAAQ,CAACiB,IAAI,CAACJ,OAAO,CAAC;MAC5BF,KAAK,CAACJ,MAAM,IAAI,CAAC;IACnB,CAAC;IACDW,aAAa,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAMO,KAAK,GAAGR,KAAK,CAACX,QAAQ,CAACoB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACpB,EAAE,KAAKW,MAAM,CAACE,OAAO,CAACb,EAAE,CAAC;MACvE,IAAIkB,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBR,KAAK,CAACX,QAAQ,CAACmB,KAAK,CAAC,GAAG;UACtB,GAAGP,MAAM,CAACE,OAAO;UACjBV,KAAK,EAAEW,UAAU,CAACH,MAAM,CAACE,OAAO,CAACV,KAAK,CAAC;UACvCC,KAAK,EAAEW,QAAQ,CAACJ,MAAM,CAACE,OAAO,CAACT,KAAK;QACtC,CAAC;MACH;IACF,CAAC;IACDiB,aAAa,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACX,QAAQ,GAAGW,KAAK,CAACX,QAAQ,CAACuB,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACpB,EAAE,KAAKW,MAAM,CAACE,OAAO,CAAC;IACtE;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,UAAU;EAAEQ,aAAa;EAAEI;AAAc,CAAC,GAAGd,YAAY,CAACgB,OAAO;AAEhF,OAAO,MAAMC,cAAc,GAAId,KAAK,IAAKA,KAAK,CAACX,QAAQ,CAACA,QAAQ;AAChE,OAAO,MAAM0B,iBAAiB,GAAGA,CAACf,KAAK,EAAEV,EAAE,KACzCU,KAAK,CAACX,QAAQ,CAACA,QAAQ,CAAC2B,IAAI,CAACN,CAAC,IAAIA,CAAC,CAACpB,EAAE,KAAKe,QAAQ,CAACf,EAAE,CAAC,CAAC;AAE1D,eAAeO,YAAY,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}